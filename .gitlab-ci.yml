variables:
  NUGET_PATH: 'C:\Tools\Nuget\nuget.exe'
  MSBUILD_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\MSBuild.exe'
  PYTHON_VENV_PATH: 'C:\Tools\venv\Scripts\activate.ps1'
  VSTEST_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\TestPlatform\vstest.console.exe'

stages:
  - build
  - test

build_job:
  stage: build
  script:
    # Generate correct shared assembly version configuration
    - '& "$env:PYTHON_VENV_PATH"'
    - python .\scripts\version.py -f .\SharedAssemblyInfo.cs
    # Build solution
    - '& "$env:NUGET_PATH" restore'
    - '& "$env:MSBUILD_PATH" /p:Configuration=Release /p:Platform=x86 /clp:ErrorsOnly'
    # Build gRPC stubs for Python
    - python -m grpc_tools.protoc ./Service/protos/s7service/step7.proto
      -I ./Service/protos/
      --python_out=./Service/Python/
      --grpc_python_out=./Service/Python/
    # Build Python s7service package with setuptools
    - cd ./Service/Python/
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      # Library
      - '.\S7Lib\bin\x86\Release\'
      - '.\UnitTestS7Lib\bin\x86\Release\'
      # CLI
      - '.\S7Cli\bin\x86\Release\'
      - '.\UnitTestS7Cli\bin\x86\Release\'
      # gRPC C# server
      - '.\Server\bin\x86\Release\'
      # gRPC S7Service stubs
      - '.\Service\Python\'
      # Legacy s7cli
      - '.\S7Cli_Legacy\bin\x86\Release\'

test_job:
  stage: test
  script:
    - '& "$env:VSTEST_PATH" .\UnitTestS7Cli\bin\x86\Release\UnitTestS7Cli.dll'
    - '& "$env:VSTEST_PATH" .\UnitTestS7Lib\bin\x86\Release\UnitTestS7Lib.dll'
  dependencies:
    - build_job
