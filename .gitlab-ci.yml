variables:
  NUGET_PATH: 'C:\Tools\Nuget\nuget.exe'
  MSBUILD_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\MSBuild.exe'
  PYTHON_VENV_PATH: 'C:\Tools\venv\Scripts\activate.ps1'
  VSTEST_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\TestPlatform\vstest.console.exe'

stages:
  - build
  - test
  - release

build_job:
  stage: build
  tags:
    - cvw-plc-s7
  script:
    # TODO remove? Generate correct shared assembly version configuration
    - '& "$env:PYTHON_VENV_PATH"'
    - python .\scripts\version.py -f .\SharedAssemblyInfo.cs
    # Fetch assembly version from git tag
    - If ($env:CI_COMMIT_TAG) {
        $env:ASSEMBLY_VERSION = $env:CI_COMMIT_TAG | Select-String '(\d+.\d+.\d+)(?:(a|b|rc)\d+)?' | ForEach-Object { $_.Matches[0].Groups[1].Value };
        $env:ASSEMBLY_VERSION += '.0'
      } Else {
        $env:ASSEMBLY_VERSION = '1.0.0.0'
      }
    # Build solution
    - '& "$env:NUGET_PATH" restore'
    - '& "$env:MSBUILD_PATH" /p:Configuration=Release /p:Platform=x86 /p:Version=$env:ASSEMBLY_VERSION /clp:ErrorsOnly'
    # Build gRPC stubs for Python
    - python -m grpc_tools.protoc ./S7Service/protos/s7service/step7.proto
      -I ./S7Service/protos/
      --python_out=./S7Service/Python/ v
      --grpc_python_out=./S7Service/Python/
    # Build Python s7service package with setuptools
    - cd ./S7Service/Python/
    - python setup.py sdist bdist_wheel
  artifacts:
    name: 'S7Api_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}'
    paths:
      # Library
      - '.\S7Lib\bin\Release\'
      - '.\S7LibTests\bin\Release\'
      # CLI
      - '.\S7Cli\bin\Release\'
      - '.\S7CliTests\bin\Release\'
      # gRPC C# server
      - '.\S7Server\bin\Release\'
      - .\S7ServerTests\bin\x86\Release\
      # gRPC S7Service stubs
      - '.\S7Service\Python\'

test_job:
  stage: test
  tags:
    - cvw-plc-s7
  script:
    - '& "$env:VSTEST_PATH" .\S7CliTests\bin\Release\S7CliTests.dll'
    - '& "$env:VSTEST_PATH" .\S7ServerTests\bin\x86\Release\net6.0\S7ServerTests.dll'
    # Skip experimental features test
    - '& "$env:VSTEST_PATH" .\S7LibTests\bin\Release\S7LibTests.dll /Tests:TestS7Handle'
  dependencies:
    - build_job

test_docs_job:
  image: alpine
  stage: test
  before_script:
    - apk update
    - apk add doxygen
  script:
    - doxygen ./Doxyfile
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH

pages:
  image: alpine
  stage: release
  before_script:
    - apk update
    - apk add doxygen
  script:
  - doxygen ./Doxyfile
  - mv Doc/html/ public/
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

release_job:
  stage: release
  # Job should be run in shared linux runner
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Creating a release for $CI_COMMIT_TAG."
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Binaries'
          url: 'https://gitlab.cern.ch/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_TAG/download?job=build_job'
        - name: 'API Documentation'
          url: 'https://s7api.web.cern.ch/s7api/index.html'
